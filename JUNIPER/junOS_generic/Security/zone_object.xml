<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ObjectDefinition>
<information>
    <configType>cli</configType>
    <defaultDisplay>false</defaultDisplay>
    <definitionOrder>10</definitionOrder>
    <description/>
    <displayField>object_id</displayField>
    <dynamic>false</dynamic>
    <group>Security</group>
    <icon>/images/repository/CommandDefinition/icons/web cluster.jpg</icon>
    <importIfMandatoryPresent>false</importIfMandatoryPresent>
    <importrank>1</importrank>
    <name>Zones</name>
    <order>10000</order>
    <relatedObjects/>
    <reorderinstances>false</reorderinstances>
    <singleton>false</singleton>
    <sortascending>true</sortascending>
    <sortauto>true</sortauto>
    <sortnumerical>true</sortnumerical>
    <sortvariable>params._order</sortvariable>
    <visibility>5</visibility>
    <visible>true</visible>
  </information>
<variables frozen="0">
    <variable displayName="Name" displayOrder="0" isMandatory="true" maxLength="150" name="params.object_id" type="String"/>
    <variable displayName="Services" displayOrder="1" maxLength="150" name="params.service_list.0.service" type="String">
      <values>
        <value>all</value>
        <value>any-service</value>
        <value>dns</value>
        <value>finger</value>
        <value>ftp</value>
        <value>http</value>
        <value>https</value>
        <value>ident-reset</value>
        <value>ike</value>
        <value>lsping</value>
        <value>netconf</value>
        <value>ntp</value>
        <value>ping</value>
        <value>r2cp</value>
        <value>reverse-ssh</value>
        <value>reverse-telnet</value>
        <value>rlogin</value>
        <value>rpm</value>
        <value>rsh</value>
        <value>sip</value>
        <value>snmp</value>
        <value>snmp-trap</value>
        <value>ssh</value>
        <value>telnet</value>
        <value>tftp</value>
        <value>traceroute</value>
        <value>xnm-clear-text</value>
        <value>xnm-ssl</value>
      </values>
    </variable>
    <variable displayName="Protocols" displayOrder="2" maxLength="150" name="params.protocol_list.0.protocol" type="String">
      <values>
        <value>all</value>
        <value>vrrp</value>
        <value>sap</value>
        <value>rsvp</value>
        <value>router-discovery</value>
        <value>ripng</value>
        <value>rip</value>
        <value>pim</value>
        <value>pgm</value>
        <value>ospf3</value>
        <value>ospf</value>
        <value>nhrp</value>
        <value>ndp</value>
        <value>msdp</value>
        <value>ldp</value>
        <value>igmp</value>
        <value>dvmrp</value>
        <value>bgp</value>
        <value>bfd</value>
      </values>
    </variable>
    <variable displayName="Tcp Rst" displayOrder="3" editable="false" maxLength="150" name="params.tcpRst" type="String">
      <values>
        <value>tcp-rst</value>
      </values>
    </variable>
    <variable displayName="Screen" displayOrder="4" maxLength="150" name="params.screen" type="String"/>
    <variable displayName="Description" displayOrder="5" maxLength="150" name="params.description" type="String"/>
  </variables>


<example>
    <content>root&gt; show configuration security zones | display set 
set security zones security-zone trust host-inbound-traffic system-services all
set security zones security-zone trust host-inbound-traffic protocols all
set security zones security-zone trust interfaces vlan.0
set security zones security-zone untrust screen untrust-screen
set security zones security-zone untrust interfaces ge-0/0/0.0 host-inbound-traffic system-services dhcp
set security zones security-zone untrust interfaces ge-0/0/0.0 host-inbound-traffic system-services tftp
set security zones security-zone untrust interfaces ge-0/0/0.0 host-inbound-traffic system-services ssh
set security zones security-zone untrust interfaces ge-0/0/0.0 host-inbound-traffic system-services ping
set security zones security-zone untrust interfaces ge-0/0/0.0 host-inbound-traffic system-services snmp
set security zones security-zone dmz host-inbound-traffic system-services all
set security zones security-zone dmz host-inbound-traffic protocols all
set security zones security-zone testAntoine host-inbound-traffic system-services lsping
set security zones security-zone testAntoine host-inbound-traffic protocols sap
set security zones security-zone testDemo host-inbound-traffic system-services netconf
set security zones security-zone testDemo host-inbound-traffic protocols ospf
</content>
  </example>
<command name="IMPORT">
    <operation>show configuration security zones | display set</operation>
    <parser>
      <section name="zone_object">
        <regexp>@^set\s+security\s+zones\s+security-zone\s+(?&lt;object_id&gt;\S+)@</regexp>
      </section>
      <lines>
        <line>
          <array name="service_list">
            <regexp>@^set\s+security\s+zones\s+security-zone\s+\S+\s+host-inbound-traffic\s+system-services\s+(?&lt;service&gt;\S+)@</regexp>
          </array>
        </line>
        <line>
          <array name="protocol_list">
            <regexp>@^set\s+security\s+zones\s+security-zone\s+\S+\s+host-inbound-traffic\s+protocols\s+(?&lt;protocol&gt;\S+)@</regexp>
          </array>
        </line>
        <line>
          <regexp>@^set\s+security\s+zones\s+security-zone\s+\S+\s+(?&lt;tcpRst&gt;tcp-rst)@</regexp>
        </line>
        <line>
          <regexp>@^set\s+security\s+zones\s+security-zone\s+\S+\s+screen\s+(?&lt;screen&gt;\S+)@</regexp>
        </line>
        <line>
          <regexp>@^set\s+security\s+zones\s+security-zone\s+\S+\s+description\s+"?(?&lt;description&gt;[^"]*)"?@</regexp>
        </line>
      </lines>
    </parser>
  <post_template/>
  </command>

<command name="DELETE">
    <operation>delete security zones security-zone {$object_id}
</operation>
  </command>
<command name="CREATE">
    <operation>{if !empty($params.description)}
set security zones security-zone {$object_id} description "{$params.description}"
{/if}
{if !empty($params.service_list)}
{foreach $params.service_list as $srv}
set security zones security-zone {$object_id} host-inbound-traffic system-services {$srv.service}
{/foreach}
{/if}
{if !empty($params.protocol_list)}
{foreach $params.protocol_list as $proto}
set security zones security-zone {$object_id} host-inbound-traffic protocols {$proto.protocol}
{/foreach}
{/if}	
{if !empty($params.tcpRst)}
set security zones security-zone {$object_id} {$params.tcpRst}
{/if}
{if !empty($params.screen)}
set security zones security-zone {$object_id} screen {$params.screen}
{/if}
</operation>
  </command>
<command name="UPDATE">
    <operation>{if !empty($params.description)}
set security zones security-zone {$object_id} description "{$params.description}"
{/if}
{if !empty($params.tcpRst)}
set security zones security-zone {$object_id} {$params.tcpRst}
{/if}
{if !empty($params.screen)}
set security zones security-zone {$object_id} screen {$params.screen}
{/if}
{if !empty($zone_object.$object_id.service_list)}
{foreach $zone_object.$object_id.service_list as $srv}
{if !empty($params.service_list)}
{assign var="found" value="false"}
{foreach $params.service_list as $srvp}
{if $srv.service === $srvp.service}
{assign var="found" value="true"}
{/if}
{/foreach}
{if $found === "false"}
delete security zones security-zone {$object_id} host-inbound-traffic system-services {$srv.service}
{/if}
{else}
delete security zones security-zone {$object_id} host-inbound-traffic system-services {$srv.service}
{/if}
{/foreach}
{/if}
{if !empty($params.service_list)}
{foreach $params.service_list as $srv}
set security zones security-zone {$object_id} host-inbound-traffic system-services {$srv.service}
{/foreach}
{/if}
{if !empty($zone_object.$object_id.protocol_list)}
{foreach $zone_object.$object_id.protocol_list as $protocol}
{if !empty($params.protocol_list)}
{assign var="found" value="false"}
{foreach $params.protocol_list as $protocolp}
{if $protocol.protocol === $protocolp.protocol}
{assign var="found" value="true"}
{/if}
{/foreach}
{if $found === "false"}
delete security zones security-zone {$object_id} host-inbound-traffic protocols {$protocol.protocol}
{/if}
{else}
delete security zones security-zone {$object_id} host-inbound-traffic protocols {$protocol.protocol}
{/if}
{/foreach}
{/if}
{if !empty($params.protocol_list)}
{foreach $params.protocol_list as $protocol}
set security zones security-zone {$object_id} host-inbound-traffic protocols {$protocol.protocol}
{/foreach}
{/if}
</operation>
  </command>
</ObjectDefinition>
