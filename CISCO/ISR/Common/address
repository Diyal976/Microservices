<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ObjectDefinition>  <information>
    <configType>cli</configType>
    <createTemplateId/>
    <createTemplateObject/>
    <defaultDisplay>false</defaultDisplay>
    <description/>
    <displayField>object_id</displayField>
    <dynamic>false</dynamic>
    <group>Network</group>
    <icon>/images/repository/CommandDefinition/icons/AccesIpList.png</icon>
    <importIfMandatoryPresent>true</importIfMandatoryPresent>
    <importonce>false</importonce>
    <importrank>1</importrank>
    <name>Addresses</name>
    <order>2400</order>
    <relatedObjects/>
    <reorderinstances>false</reorderinstances>
    <singleton>false</singleton>
    <sortascending>true</sortascending>
    <sortauto>true</sortauto>
    <sortnumerical>true</sortnumerical>
    <sortvariable>params._order</sortvariable>
    <visibility>5</visibility>
  </information>  <variables frozen="0">
    <variable displayName="Name" displayOrder="0" maxLength="200" name="params.object_id" startIncrement="0" type="String"/>
    <variable displayName="Type" displayOrder="1" isMandatory="true" maxLength="200" name="params.type" startIncrement="0" type="String">
      <values>
        <value displayValue="ipaddress">ipaddress</value>
        <value displayValue="network">network</value>
      </values>
    </variable>
    <variable displayName="IP address" displayOrder="2" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.address" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="address" displayOrder="0" groupDisplayName="Address" isGrouped="true" isMandatory="true" maxLength="200" name="params.address" selectorValue="ipaddress" startIncrement="0" type="IpAddress"/>
      </behaviors>
    </variable>
    <variable displayName="Network address" displayOrder="3" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.network_address" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="network_address" displayOrder="0" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.network_address" selectorValue="network" startIncrement="0" type="IpAddress"/>
      </behaviors>
    </variable>
    <variable displayName="Network Mask" displayOrder="4" groupDisplayName="Address" groupSeparator="/" isGrouped="true" maxLength="200" name="params.network_mask" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="network_mask" displayOrder="0" groupDisplayName="Address" groupSeparator="/" isGrouped="true" maxLength="200" name="params.network_mask" selectorValue="network" startIncrement="0" type="IpMask"/>
      </behaviors>
    </variable>
    <variable displayName="Start IP address" displayOrder="5" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.start_address" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="start_address" displayOrder="0" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.start_address" selectorValue="iprange" startIncrement="0" type="IpAddress"/>
      </behaviors>
    </variable>
    <variable displayName="End IP address" displayOrder="6" groupDisplayName="Address" groupSeparator="-" isGrouped="true" maxLength="200" name="params.end_address" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="end_address" displayOrder="0" groupDisplayName="Address" groupSeparator="-" isGrouped="true" maxLength="200" name="params.end_address" selectorValue="iprange" startIncrement="0" type="IpAddress"/>
      </behaviors>
    </variable>
    <variable displayName="FQDN" displayOrder="7" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.fqdn" selector="params.type" startIncrement="0" type="Composite" visible="false">
      <behaviors>
        <behavior displayName="fqdn" displayOrder="0" groupDisplayName="Address" isGrouped="true" maxLength="200" name="params.fqdn" selectorValue="fqdn" startIncrement="0" type="String"/>
      </behaviors>
    </variable>
  </variables>  <example>
    <content>! ipaddress
object-group network Address1
 host 1.1.1.1

!iprange


!network


!fqdn
</content>
  </example>
<command name="IMPORT">
    <operation>show running-config | sec object-group network</operation>
    <parser>
      <section>
        <regexp>@object-group network (?&lt;object_id&gt;\S+)@</regexp>
        
        
        
      </section>
      <lines>
        <ignore>
          <regexp>@^\sdescription@</regexp>
        </ignore>
        <line>
          <regexp>@\s+host (?&lt;address&gt;\S+)@</regexp>
        </line>
        <line>
          <regexp>@\s+(?&lt;network_address&gt;([0-9]{1,3}\.){3}[0-9]{1,3}) (?&lt;network_mask&gt;([0-9]{1,3}\.){3}[0-9]{1,3})@</regexp>
        </line>
      </lines>
    </parser>
    <post_template>{if !empty($params.address)}
{assign_object_variable var="type" value="ipaddress"}
{else if !empty($params.network_address) and !empty($params.network_mask) }
{assign_object_variable var="type" value="network"}
{else if !empty($params.start_address) and !empty($params.end_address)}
{assign_object_variable var="type" value="iprange"}
{else if !empty($params.fqdn)}
{assign_object_variable var="type" value="fqdn"}
{/if}</post_template>
  </command>
<command name="CREATE">
    <operation>{if !empty($params.address)}

object-group network {$params.object_id}
 host {$params.address}

{else if !empty($params.network_address) and !empty($params.network_mask)}

object-group  network {$params.object_id}
 {$params.network_address} {$params.network_mask}

{/if}
</operation>
  </command>
  <command name="UPDATE">
    <operation>no object network {$address.$object_id.object_id}
{if !empty($params.address)}

object network {$params.object_id}
 host {$params.address}

{else if !empty($params.network_address) and !empty($params.network_mask)}

object network {$params.object_id}
 {$params.network_address}{$params.network_mask}

{/if}
</operation>
  </command>
  <command name="DELETE">
    <operation>no object network {$address.$object_id.object_id}
</operation>
  </command>
</ObjectDefinition>
